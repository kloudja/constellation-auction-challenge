root = true

# ===== Global .NET settings =====
[*.{cs,vb}]
# Prefer modern language features
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Remove unnecessary usings (IDE0005) - marcar como warning para ficar visível
dotnet_diagnostic.IDE0005.severity = warning
# 'using' declaration em vez de 'using (...) { }' quando possível
csharp_style_prefer_simple_using_statement = true:suggestion

# ===== C# specific =====
[*.cs]
# var everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Primary constructors (C# 12)
# IDE0290: "Use primary constructor"
dotnet_diagnostic.IDE0290.severity = suggestion

# Expression-bodied members quando possível
csharp_style_expression_bodied_methods = when_possible:suggestion
csharp_style_expression_bodied_properties = when_possible:suggestion
csharp_style_expression_bodied_accessors = when_possible:suggestion
csharp_style_expression_bodied_constructors = when_possible:suggestion
csharp_style_expression_bodied_indexers = when_possible:suggestion
csharp_style_expression_bodied_operators = when_possible:suggestion

# File-scoped namespaces
csharp_style_namespace_declarations = file_scoped:warning
# Usings fora do namespace (coerente com file-scoped)
csharp_using_directive_placement = outside_namespace:warning

# Pattern matching e switch expressions
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# Target-typed 'new' e collection expressions (C# 12)
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_collection_expression = true:suggestion
dotnet_diagnostic.IDE0300.severity = suggestion   # Prefer collection expressions

# Static locals / lambdas quando possível
csharp_style_prefer_static_local_function = true:suggestion
dotnet_style_prefer_static_lambda = true:suggestion

# Tuplas, ranges, discards, etc.
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_throw_expression = true:suggestion

# ===== Formatting =====
# Espaços, newlines, etc. (deixa o formatador do VS trabalhar)
csharp_new_line_before_open_brace = all
csharp_prefer_braces = when_multiline:suggestion
end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
tab_width = 4
trim_trailing_whitespace = true

# ===== Tests: permitir underscores em nomes de métodos =====
[tests/**.cs]
dotnet_diagnostic.CA1707.severity = none

# Opcional: reduzir ruído de warnings de estilo só nos testes
csharp_style_expression_bodied_methods = when_possible:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent
